unit uUniversidade;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, uTelaPadrao01, sSkinManager, UCrpeClasses, UCrpe32, DB, ADODB,
  sNomeStored, sChamaLocalizar, sEnter, Buttons, sSpeedButton, ExtCtrls, sPanel,
  sComboBox, sCombo_Box, StdCtrls, Grids, DBGrids, Mask, sMaskEdit, sEdit_Text,
  sCheckBox, sCheck_Box, sScrollBox, sFrameBar, ComCtrls;

type
  TFUniversidade = class(TFTelaPadrao01)
    sEdit_Text1: TsEdit_Text;
    Label3: TLabel;
    sEdit_Text2: TsEdit_Text;
    Label4: TLabel;
    Label10: TLabel;
    PageControl2: TPageControl;
    TabSheet1: TTabSheet;
    TabSheet2: TTabSheet;
    sEdit_Text7: TsEdit_Text;
    Label13: TLabel;
    Label14: TLabel;
    SP_MATRICULA: TADOStoredProc;
    DS_MATRICULA: TDataSource;
    TabSheet3: TTabSheet;
    PageControl3: TPageControl;
    TabSheet4: TTabSheet;
    Button1: TButton;
    TabSheet5: TTabSheet;
    TabSheet6: TTabSheet;
    Label21: TLabel;
    DBGrid1: TDBGrid;
    Button4: TButton;
    Label5: TLabel;
    sEdit_Text3: TsEdit_Text;
    Label6: TLabel;
    sEdit_Text4: TsEdit_Text;
    DBGrid3: TDBGrid;
    Button2: TButton;
    Label8: TLabel;
    sCombo_Box1: TsCombo_Box;
    sEdit_Text5: TsEdit_Text;
    sEdit_Text6: TsEdit_Text;
    Label7: TLabel;
    Label11: TLabel;
    sEdit_Text8: TsEdit_Text;
    Label12: TLabel;
    DBGrid2: TDBGrid;
    DS_BOLETIM: TDataSource;
    SP_BOLETIM: TADOStoredProc;
    procedure Carregar_Combo_Box_Disciplina;
    procedure FormShow(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure CarregarStatus;
    procedure CarregarBoletim;
    procedure pnEditarClick(Sender: TObject);
    procedure DeletarDisciplina;
    procedure DBGrid3CellClick(Column: TColumn);
    procedure DBGrid3KeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure Button2Click(Sender: TObject);
    procedure DBGrid2CellClick(Column: TColumn);
    procedure DBGrid2DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);

  private

    { Private declarations }
  public
    { Public declarations }
    Disciplina : String;
    Nota : Integer;
  end;

var
  FUniversidade: TFUniversidade;

implementation

{$R *.dfm}


procedure TFUniversidade.Button1Click(Sender: TObject);
begin
  inherited;
      SP_MATRICULA.Close;
      SP_MATRICULA.ProcedureName := 'matricular_aluno';
      SP_MATRICULA.Parameters.Refresh;
      SP_MATRICULA.Parameters.ParamByName('@matricula_aluno').Value:=sEdit_Text8.Text;
      SP_MATRICULA.Parameters.ParamByName('@Disciplina').Value:= sCombo_Box1.Text;
      SP_MATRICULA.Parameters.ParamByName('@ano').Value:= sEdit_Text5.Text;
      SP_MATRICULA.Parameters.ParamByName('@semestre').Value:=sEdit_Text6.Text;
      SP_MATRICULA.ExecProc;

      CarregarStatus();
end;

procedure TFUniversidade.DeletarDisciplina;
begin
  inherited;
    Sp_Stored.Close;
    Sp_Stored.ProcedureName:='deletar_disciplina_aluno';
    Sp_Stored.Parameters.Refresh;
    Sp_Stored.Parameters.ParamByName('@matricula_aluno').Value:= sEdit_Text8.Text;
    Sp_Stored.Parameters.ParamByName('@Disciplina').Value:= Disciplina;
    Sp_Stored.ExecProc;

    CarregarStatus();

end;

procedure TFUniversidade.CarregarStatus;
begin
  inherited;
  SP_MATRICULA.Close;
  SP_MATRICULA.ProcedureName:='stb_status_aluno';
  SP_MATRICULA.Parameters.Refresh;
  SP_MATRICULA.Parameters.ParamByName('@matricula_aluno').Value:=sEdit_Text8.Text;
  SP_MATRICULA.Open;

end;

procedure TFUniversidade.Button2Click(Sender: TObject);
begin
  inherited;
  SP_BOLETIM.Close;
  SP_BOLETIM.ProcedureName:='boletim_aluno';
  SP_BOLETIM.Parameters.Refresh;
  SP_BOLETIM.Parameters.ParamByName('@matricula_aluno').Value:=sEdit_Text8.Text;
  SP_BOLETIM.Parameters.ParamByName('@ano').Value:=sEdit_Text5.Text;
  SP_BOLETIM.Open;


end;

procedure TFUniversidade.CarregarBoletim;
begin
  inherited;
  SP_BOLETIM.Close;
  SP_BOLETIM.ProcedureName:='boletim_aluno';
  SP_BOLETIM.Parameters.Refresh;
  SP_BOLETIM.Parameters.ParamByName('@matricula_aluno').Value:=sEdit_Text8.Text;
  SP_BOLETIM.Parameters.ParamByName('@ano').Value:=sEdit_Text5.Text;
  SP_BOLETIM.Open;

end;

procedure TFUniversidade.Carregar_Combo_Box_Disciplina;
begin
    sCombo_Box1.Clear;

    Sp_Stored.Close;
    Sp_Stored.ProcedureName:='stb_localizar_disciplinas_lais';
    Sp_Stored.Parameters.Refresh;
    Sp_Stored.Parameters.ParamByName('@VloCampo').Value:= 'NOME_DISCIPLINAS';
    Sp_Stored.Parameters.ParamByName('@VloBusca1').Value:= sEdit_Text7.Text;
    Sp_Stored.Open;

    while not Sp_Stored.Eof do  // enquanto não chegou ao fim, processa
                               // propriedade é um boolean q quando é igual a true significa que o DataSet está posicionado no final
begin

    sCombo_Box1.Items.Add(Sp_Stored.FieldByName('NOME_DISCIPLINAS').AsString);
    Sp_Stored.Next;

end;
 sCombo_Box1.ItemIndex := -1;
end;


procedure TFUniversidade.DBGrid2CellClick(Column: TColumn);
begin
  inherited;
   Disciplina := DBGrid3.DataSource.DataSet.FieldByName('NOME_DISCIPLINAS').AsString;
end;


procedure TFUniversidade.DBGrid3CellClick(Column: TColumn);
begin
  inherited;
  Disciplina := DBGrid3.DataSource.DataSet.FieldByName('NOME_DISCIPLINAS').AsString;
end;

procedure TFUniversidade.DBGrid3KeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if Key = vk_delete then
    begin
      If MessageDlg(
        'ATENÇÃO! Deseja prosseguir com a exclusão desta Disciplina?'
          , mtConfirmation, [mbyes, mbno], 0) = mryes then
      begin
           DeletarDisciplina();
           CarregarStatus();
      end
      else
        Abort;

    end;

end;

procedure TFUniversidade.FormShow(Sender: TObject);
begin
  inherited;
    PageControl2.ActivePageIndex := 0;

end;


procedure TFUniversidade.pnEditarClick(Sender: TObject);
begin
  inherited;
  CarregarStatus();
  Carregar_Combo_Box_Disciplina();
end;

procedure TFUniversidade.DBGrid2DrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
  inherited;



  if (Column.FieldName = 'MÉDIA') then  // condicao p verificar a coluna q desejo modificar
  begin
    if column.Field.AsInteger >= 7 then   // condicao informando q se for debito eu desejo q altere a cor para vermelho
      DBGrid2.Canvas.Brush.Color := clGreen
    else if column.Field.AsInteger <= 6 then   // condicao informando q se for credito eu desejo q altere a cor para verde
      DBGrid2.Canvas.Brush.Color := clRed;

    DBGrid2.DefaultDrawColumnCell(Rect, DataCol, Column, State); // forçando a atualização da aparencia

end;
end;

end.


